enum ProductType {
  GAMING_PC
  BIKE
  DRONE
}

enum BikeType {
  KIDS
  MOUNTAIN
  ELECTRIC
  BEACH
}

type Product {
  name: String!,
  price: Float!,
  image: String!,
  type: ProductType!,
  createdBy: User!,
  description: String,
  liquidCooled: Boolean,
  range: String,
  bikeType: BikeType
}

input NewProductInput {
  name: String!,
  price: Float!,
  image: String!,
  type: ProductType!,
  description: String,
  liquidCooled: Boolean,
  bikeType: BikeType,
  range: String
}

input UpdateProductInput {
  name: String,
  price: String,
  image: String,
  description: String,
  liquidCooled: Boolean,
  bikeType: BikeType,
  range: String
}

extend type Query {
  product(id: ID!): Product!,
  products:[Product]!
}

extend type Mutation {
  newProduct(input: NewProductInput!): Product!,
  updateProduct(id: ID!, input:UpdateProductInput): Product!,
  removeProduct(id: ID!): Product!
}